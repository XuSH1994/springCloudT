spring:
  application:
    name: eureka-server

server:
  port: 8082
#  servlet:
#    context-path: /eurekaT

eureka:
  instance:
    #Eureka服务器名称
    hostname: localhost
    prefer-ip-address: true
    instance-id: ${spring.cloud.client.ip-address}:${server.port}
  client:
    #因为微服务的每个服务都可以作为一个服务提供者，这里设置是否向eureka注册自己
    register-with-eureka: false
    #固定写法，false表示自己是个注册中心
    fetch-registry: false
    service-url:
      defaultZone: http://${spring.cloud.client.ip-address}:${server.port}/eureka/
    server:
  server:
    #设为false，关闭自我保护，即Eureka server在云心光器件会去统计心跳失败比例在15分钟之内是否低于85%,如果低于85%，EurekaServer
    #会将这些事例保护起来，让这些事例不会过期，但是在保护器内如果刚哈这个服务提供者非正常下线了，此时服务消费者会拿到一个无效的服务
    #实例，此时调用会失败，对于这个问题需要服务消费者端有一些容错机制，如重试、断路器等；
    enable-self-preservation: false
    #扫描失效服务的间隔时间（单位是毫秒，摩恩是60*1000)，即60s
    eviction-interval-timer-in-ms: 5000
    peer-eureka-nodes-update-interval-ms: 5000